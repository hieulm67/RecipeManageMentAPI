// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeManagementBE.Repository;

namespace RecipeManagementBE.Migrations
{
    [DbContext(typeof(StaffMateContext))]
    [Migration("20210616165150_StaffMate-DB-Migration")]
    partial class StaffMateDBMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RecipeManagementBE.Entity.Account", b =>
                {
                    b.Property<string>("UID")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("FullName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UID")
                        .HasName("PK__Account__536C85E5FC9F8FDE");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            UID = "fxOOYx2XASRKC2A77aNG2wKJhAy2",
                            Email = "staffmatesum2021@gmail.com",
                            IsDeleted = false,
                            Password = "$2a$11$gQLzmk8hWrWEYNFppMaWVugdn6rWlluDs/PtvujwnxTIf.rMxEk4O",
                            RoleId = 1L,
                            FullName = "Admin System"
                        });
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UID")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("UID")
                        .IsUnique()
                        .HasFilter("[UID] IS NOT NULL");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsDeleted = false,
                            UID = "fxOOYx2XASRKC2A77aNG2wKJhAy2"
                        });
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("HomePage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Dish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("UID")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("UID")
                        .IsUnique()
                        .HasFilter("[UID] IS NOT NULL");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<long>("NotifiedId")
                        .HasColumnType("bigint");

                    b.Property<string>("PayloadContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("datetime");

                    b.Property<string>("To")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("To");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.ProcessingStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<string>("StepContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("StepTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("ProcessingStep");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Qa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReply")
                        .HasColumnType("bit");

                    b.Property<long?>("QaParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("QAId");

                    b.Property<DateTime>("QaTime")
                        .HasColumnType("datetime")
                        .HasColumnName("QATime");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<string>("UID")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("QaParentId")
                        .IsUnique()
                        .HasFilter("[QAId] IS NOT NULL");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UID");

                    b.ToTable("QA");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DishId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsing")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.RecipeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeDetail");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.RecipeTool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RecipeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("ToolId");

                    b.ToTable("RecipeTool");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "UQ__Role__A25C5AA7C878A431")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "ADMIN",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "MANAGER",
                            IsDeleted = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "STAFF",
                            IsDeleted = false,
                            Name = "Staff"
                        });
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Tool", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Tool");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Account", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Account__RoleId__1367E606")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Admin", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Account", "Account")
                        .WithOne("Admin")
                        .HasForeignKey("RecipeManagementBE.Entity.Admin", "UID")
                        .HasConstraintName("FK__Admin__AccountUs__1BFD2C07");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Category", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Brand", "Brand")
                        .WithMany("Categories")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Category__BrandI__1ED998B2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Dish", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Category", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Dish__CategoryId__21B6055D")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RecipeManagementBE.Entity.Employee", "Manager")
                        .WithMany("Dishes")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("FK__Dish__ManagerId__22AA2996")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Employee", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Brand", "Brand")
                        .WithMany("Employees")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Employee__BrandI__1920BF5C")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RecipeManagementBE.Entity.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("RecipeManagementBE.Entity.Employee", "UID")
                        .HasConstraintName("FK__Employee__Accoun__182C9B23");

                    b.Navigation("Account");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Notification", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Account", "ToAccount")
                        .WithMany("Notifications")
                        .HasForeignKey("To")
                        .HasConstraintName("FK__Notification__To__35BCFE0A")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ToAccount");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.ProcessingStep", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Recipe", "Recipe")
                        .WithMany("ProcessingSteps")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__Processin__Recip__286302EC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Qa", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Qa", "QaParent")
                        .WithOne("QaChild")
                        .HasForeignKey("RecipeManagementBE.Entity.Qa", "QaParentId")
                        .HasConstraintName("FK__QA__QAId__30F848ED");

                    b.HasOne("RecipeManagementBE.Entity.Recipe", "Recipe")
                        .WithMany("Qas")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__QA__RecipeId__32E0915F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementBE.Entity.Account", "Account")
                        .WithMany("Qas")
                        .HasForeignKey("UID")
                        .HasConstraintName("FK__QA__AccountUsern__31EC6D26")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Account");

                    b.Navigation("QaParent");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Recipe", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Dish", "Dish")
                        .WithMany("Recipes")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__Recipe__DishId__25869641")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.RecipeDetail", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Ingredient", "Ingredient")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("IngredientId")
                        .HasConstraintName("FK__RecipeDet__Ingre__2E1BDC42")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementBE.Entity.Recipe", "Recipe")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__RecipeDet__Recip__2D27B809")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.RecipeTool", b =>
                {
                    b.HasOne("RecipeManagementBE.Entity.Recipe", "Recipe")
                        .WithMany("RecipeTools")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__RecipeToo__Recip__3C69FB99")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementBE.Entity.Tool", "Tool")
                        .WithMany("RecipeTools")
                        .HasForeignKey("ToolId")
                        .HasConstraintName("FK__RecipeToo__ToolI__3D5E1FD2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Account", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Employee");

                    b.Navigation("Notifications");

                    b.Navigation("Qas");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Brand", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Category", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Dish", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Employee", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Ingredient", b =>
                {
                    b.Navigation("RecipeDetails");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Qa", b =>
                {
                    b.Navigation("QaChild");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Recipe", b =>
                {
                    b.Navigation("ProcessingSteps");

                    b.Navigation("Qas");

                    b.Navigation("RecipeDetails");

                    b.Navigation("RecipeTools");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RecipeManagementBE.Entity.Tool", b =>
                {
                    b.Navigation("RecipeTools");
                });
            
            modelBuilder.Entity("RecipeManagementBE.Entity.RefreshToken", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");
                
                b.Property<DateTime>("AddedDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("ExpiryDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsRevoked")
                    .HasColumnType("bit");

                b.Property<bool>("IsUsed")
                    .HasColumnType("bit");

                b.Property<string>("JwtId")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Token")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("UserUID")
                    .HasColumnType("nvarchar(max)");
                
                b.HasKey("Id");

                b.ToTable("RefreshToken");
            });
#pragma warning restore 612, 618
        }
    }
}
